"""
https://www.acmicpc.net/problem/1292

문제
동호는 내년에 초등학교를 입학한다. 그래서 동호 어머니는 수학 선행 학습을 위해 쉽게 푸는 문제를 동호에게 주었다.

이 문제는 다음과 같다. 1을 한 번, 2를 두 번, 3을 세 번, 이런 식으로 1 2 2 3 3 3 4 4 4 4 5 .. 이러한 수열을 만들고 어느 일정한 구간을 주면 그 구간의 합을 구하는 것이다.

하지만 동호는 현재 더 어려운 문제를 푸느라 바쁘기에 우리가 동호를 도와주자.

입력
첫째 줄에 구간의 시작과 끝을 나타내는 정수 A, B(1 ≤ A ≤ B ≤ 1,000)가 주어진다. 즉, 수열에서 A번째 숫자부터 B번째 숫자까지 합을 구하면 된다.

출력
첫 줄에 구간에 속하는 숫자의 합을 출력한다.
"""

start, end = map(int, input().split())

# 재귀함수 사용 :smile:
def goDeep(idx, n, s):
    # 시작과 종료 인덱스는 글로벌 변수 사용
    global start, end

    # 1이 들어오면 1번, 2가들어오면 2번, 3이들어오면 3번 반복
    for i in range(n):
        # 반복하면서 인덱스가 범위안에 있으면 합계를 누적
        if idx >= start and idx <= end:
            s += n

        #print(f"idx: {idx}, n: {n}, s: {s}")
        # 인덱스 추가
        idx += 1

        # 인덱스 추가 후 종료보다 크면 출력하고 종료
        if idx > end:
            print(s)
            return        

    # 반복을 마치고도 종료인덱스에 도달 못한경우 n에 1을 더해 재귀 호출
    if idx <= end:
        #print("go deep")
        goDeep(idx, n+1, s)

goDeep(1, 1, 0)
